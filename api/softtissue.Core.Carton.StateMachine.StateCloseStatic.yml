### YamlMime:ManagedReference
items:
- uid: softtissue.Core.Carton.StateMachine.StateCloseStatic
  commentId: T:softtissue.Core.Carton.StateMachine.StateCloseStatic
  id: StateCloseStatic
  parent: softtissue.Core.Carton.StateMachine
  children:
  - softtissue.Core.Carton.StateMachine.StateCloseStatic.EnterState(softtissue.Core.Carton.StateMachine.CartonStateManager,Animator)
  - softtissue.Core.Carton.StateMachine.StateCloseStatic.ExitState(softtissue.Core.Carton.StateMachine.CartonStateManager)
  langs:
  - csharp
  - vb
  name: StateCloseStatic
  nameWithType: StateCloseStatic
  fullName: softtissue.Core.Carton.StateMachine.StateCloseStatic
  type: Class
  source:
    id: StateCloseStatic
    path: ''
    startLine: 4887
  assemblies:
  - cs.temp.dll
  namespace: softtissue.Core.Carton.StateMachine
  syntax:
    content: 'public class StateCloseStatic : AbstractCartonState'
    content.vb: >-
      Public Class StateCloseStatic
          Inherits AbstractCartonState
  inheritance:
  - System.Object
  - softtissue.Core.Carton.StateMachine.AbstractCartonState
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: softtissue.Core.Carton.StateMachine.StateCloseStatic.EnterState(softtissue.Core.Carton.StateMachine.CartonStateManager,Animator)
  commentId: M:softtissue.Core.Carton.StateMachine.StateCloseStatic.EnterState(softtissue.Core.Carton.StateMachine.CartonStateManager,Animator)
  id: EnterState(softtissue.Core.Carton.StateMachine.CartonStateManager,Animator)
  parent: softtissue.Core.Carton.StateMachine.StateCloseStatic
  langs:
  - csharp
  - vb
  name: EnterState(CartonStateManager, Animator)
  nameWithType: StateCloseStatic.EnterState(CartonStateManager, Animator)
  fullName: softtissue.Core.Carton.StateMachine.StateCloseStatic.EnterState(softtissue.Core.Carton.StateMachine.CartonStateManager, Animator)
  type: Method
  source:
    id: EnterState
    path: ''
    startLine: 4890
  assemblies:
  - cs.temp.dll
  namespace: softtissue.Core.Carton.StateMachine
  syntax:
    content: public override void EnterState(CartonStateManager stateManager, Animator animatorController)
    parameters:
    - id: stateManager
      type: softtissue.Core.Carton.StateMachine.CartonStateManager
    - id: animatorController
      type: Global.Animator
    content.vb: Public Overrides Sub EnterState(stateManager As CartonStateManager, animatorController As Animator)
  overridden: softtissue.Core.Carton.StateMachine.AbstractCartonState.EnterState(softtissue.Core.Carton.StateMachine.CartonStateManager,Animator)
  overload: softtissue.Core.Carton.StateMachine.StateCloseStatic.EnterState*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: softtissue.Core.Carton.StateMachine.StateCloseStatic.ExitState(softtissue.Core.Carton.StateMachine.CartonStateManager)
  commentId: M:softtissue.Core.Carton.StateMachine.StateCloseStatic.ExitState(softtissue.Core.Carton.StateMachine.CartonStateManager)
  id: ExitState(softtissue.Core.Carton.StateMachine.CartonStateManager)
  parent: softtissue.Core.Carton.StateMachine.StateCloseStatic
  langs:
  - csharp
  - vb
  name: ExitState(CartonStateManager)
  nameWithType: StateCloseStatic.ExitState(CartonStateManager)
  fullName: softtissue.Core.Carton.StateMachine.StateCloseStatic.ExitState(softtissue.Core.Carton.StateMachine.CartonStateManager)
  type: Method
  source:
    id: ExitState
    path: ''
    startLine: 4899
  assemblies:
  - cs.temp.dll
  namespace: softtissue.Core.Carton.StateMachine
  syntax:
    content: public override void ExitState(CartonStateManager stateManager)
    parameters:
    - id: stateManager
      type: softtissue.Core.Carton.StateMachine.CartonStateManager
    content.vb: Public Overrides Sub ExitState(stateManager As CartonStateManager)
  overridden: softtissue.Core.Carton.StateMachine.AbstractCartonState.ExitState(softtissue.Core.Carton.StateMachine.CartonStateManager)
  overload: softtissue.Core.Carton.StateMachine.StateCloseStatic.ExitState*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: softtissue.Core.Carton.StateMachine
  commentId: N:softtissue.Core.Carton.StateMachine
  name: softtissue.Core.Carton.StateMachine
  nameWithType: softtissue.Core.Carton.StateMachine
  fullName: softtissue.Core.Carton.StateMachine
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: softtissue.Core.Carton.StateMachine.AbstractCartonState
  commentId: T:softtissue.Core.Carton.StateMachine.AbstractCartonState
  parent: softtissue.Core.Carton.StateMachine
  name: AbstractCartonState
  nameWithType: AbstractCartonState
  fullName: softtissue.Core.Carton.StateMachine.AbstractCartonState
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: softtissue.Core.Carton.StateMachine.AbstractCartonState.EnterState(softtissue.Core.Carton.StateMachine.CartonStateManager,Animator)
  commentId: M:softtissue.Core.Carton.StateMachine.AbstractCartonState.EnterState(softtissue.Core.Carton.StateMachine.CartonStateManager,Animator)
  parent: softtissue.Core.Carton.StateMachine.AbstractCartonState
  isExternal: true
  name: EnterState(CartonStateManager, Animator)
  nameWithType: AbstractCartonState.EnterState(CartonStateManager, Animator)
  fullName: softtissue.Core.Carton.StateMachine.AbstractCartonState.EnterState(softtissue.Core.Carton.StateMachine.CartonStateManager, Animator)
  spec.csharp:
  - uid: softtissue.Core.Carton.StateMachine.AbstractCartonState.EnterState(softtissue.Core.Carton.StateMachine.CartonStateManager,Animator)
    name: EnterState
    nameWithType: AbstractCartonState.EnterState
    fullName: softtissue.Core.Carton.StateMachine.AbstractCartonState.EnterState
  - name: (
    nameWithType: (
    fullName: (
  - uid: softtissue.Core.Carton.StateMachine.CartonStateManager
    name: CartonStateManager
    nameWithType: CartonStateManager
    fullName: softtissue.Core.Carton.StateMachine.CartonStateManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Global.Animator
    name: Animator
    nameWithType: Animator
    fullName: Animator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: softtissue.Core.Carton.StateMachine.AbstractCartonState.EnterState(softtissue.Core.Carton.StateMachine.CartonStateManager,Animator)
    name: EnterState
    nameWithType: AbstractCartonState.EnterState
    fullName: softtissue.Core.Carton.StateMachine.AbstractCartonState.EnterState
  - name: (
    nameWithType: (
    fullName: (
  - uid: softtissue.Core.Carton.StateMachine.CartonStateManager
    name: CartonStateManager
    nameWithType: CartonStateManager
    fullName: softtissue.Core.Carton.StateMachine.CartonStateManager
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Global.Animator
    name: Animator
    nameWithType: Animator
    fullName: Animator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: softtissue.Core.Carton.StateMachine.StateCloseStatic.EnterState*
  commentId: Overload:softtissue.Core.Carton.StateMachine.StateCloseStatic.EnterState
  name: EnterState
  nameWithType: StateCloseStatic.EnterState
  fullName: softtissue.Core.Carton.StateMachine.StateCloseStatic.EnterState
- uid: softtissue.Core.Carton.StateMachine.CartonStateManager
  commentId: T:softtissue.Core.Carton.StateMachine.CartonStateManager
  parent: softtissue.Core.Carton.StateMachine
  name: CartonStateManager
  nameWithType: CartonStateManager
  fullName: softtissue.Core.Carton.StateMachine.CartonStateManager
- uid: Global.Animator
  isExternal: true
  name: Animator
  nameWithType: Animator
  fullName: Animator
- uid: softtissue.Core.Carton.StateMachine.AbstractCartonState.ExitState(softtissue.Core.Carton.StateMachine.CartonStateManager)
  commentId: M:softtissue.Core.Carton.StateMachine.AbstractCartonState.ExitState(softtissue.Core.Carton.StateMachine.CartonStateManager)
  parent: softtissue.Core.Carton.StateMachine.AbstractCartonState
  name: ExitState(CartonStateManager)
  nameWithType: AbstractCartonState.ExitState(CartonStateManager)
  fullName: softtissue.Core.Carton.StateMachine.AbstractCartonState.ExitState(softtissue.Core.Carton.StateMachine.CartonStateManager)
  spec.csharp:
  - uid: softtissue.Core.Carton.StateMachine.AbstractCartonState.ExitState(softtissue.Core.Carton.StateMachine.CartonStateManager)
    name: ExitState
    nameWithType: AbstractCartonState.ExitState
    fullName: softtissue.Core.Carton.StateMachine.AbstractCartonState.ExitState
  - name: (
    nameWithType: (
    fullName: (
  - uid: softtissue.Core.Carton.StateMachine.CartonStateManager
    name: CartonStateManager
    nameWithType: CartonStateManager
    fullName: softtissue.Core.Carton.StateMachine.CartonStateManager
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: softtissue.Core.Carton.StateMachine.AbstractCartonState.ExitState(softtissue.Core.Carton.StateMachine.CartonStateManager)
    name: ExitState
    nameWithType: AbstractCartonState.ExitState
    fullName: softtissue.Core.Carton.StateMachine.AbstractCartonState.ExitState
  - name: (
    nameWithType: (
    fullName: (
  - uid: softtissue.Core.Carton.StateMachine.CartonStateManager
    name: CartonStateManager
    nameWithType: CartonStateManager
    fullName: softtissue.Core.Carton.StateMachine.CartonStateManager
  - name: )
    nameWithType: )
    fullName: )
- uid: softtissue.Core.Carton.StateMachine.StateCloseStatic.ExitState*
  commentId: Overload:softtissue.Core.Carton.StateMachine.StateCloseStatic.ExitState
  name: ExitState
  nameWithType: StateCloseStatic.ExitState
  fullName: softtissue.Core.Carton.StateMachine.StateCloseStatic.ExitState
